# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  upload-artifact:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - run:
          working_directory: /home/circleci/project/
          name: pushing artifacts
          command: |
           mvn dependency:go-offline
           mvn clean install
           curl -fL https://getcli.jfrog.io | sh
           ./jfrog rt u /home/circleci/project/webapp/target/webapp.war maven --url=https://dhanu0001.jfrog.io/artifactory/maven/ --user anju003@ymail.com --apikey AKCp8nGR5PJPD3fafRswrJvbvts2JDQRfoNzn1gZAkCTWGCsDPGGiegsAFr1G4uJ7i2x5sAjy
           ./jfrog rt dl --user anju003@ymail.com --apikey AKCp8nGR5PJPD3fafRswrJvbvts2JDQRfoNzn1gZAkCTWGCsDPGGiegsAFr1G4uJ7i2x5sAjy -url https://dhanu0001.jfrog.io/artifactory "maven/maven/webapp.war"
          # ./jfrog rt del --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_API_KEY -url https://saks.jfrog.io/artifactory "cx-mvn-loc-poc-dev/cx-mvn-loc-poc-dev/my-app-2.1-SNAPSHOT.jar"
          # ./jfrog rt del "cx-mvn-loc-poc-dev/cx-mvn-loc-poc-dev/my-app-2.5.0-SNAPSHOT.jar" --url="https://saks.jfrog.io/artifactory/cx-mvn-loc-poc-dev/cx-mvn-loc-poc-dev/my-app-2.5.0-SNAPSHOT.jar"  --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_API_KEY          
          # ./jfrog rt del --spec=cx-mvn-loc-poc-dev/cx-mvn-loc-poc-dev/my-app-2.2-SNAPSHOT.jar --dry-run
          # ./jfrog rt del "cx-mvn-loc-poc-dev/ my-app-2.2-SNAPSHOT.jar" --url="https://saks.jfrog.io/artifactory/cx-mvn-loc-poc-dev/"  --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_API_KEY
           #echo "https://saks.jfrog.io/artifactory/cx-mvn-loc-poc-dev/:_authToken=$ARTIFACTORY_API_KEY" > ~/.cx-mvn-loc-poc-dev/
    
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - upload-artifact:
           context: artifactory-poc